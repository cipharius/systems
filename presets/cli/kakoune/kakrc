# PLUGINS #
evaluate-commands %sh{
  kcr init kakoune
}

# VISUAL #

colorscheme zenburn

add-highlighter global/todos regex (?:TODO|NOTE)\s 0:red+bf
add-highlighter global/trailing-whitespace regex "[ 	]+$" 0:BufferPadding

set-face global PrimarySelection default+bu

set-option -add global ui_options terminal_assistant=cat

# HOOKS #

hook global KakBegin .* %{
  source "%val{config}/scripts/fifo.kak"
  source "%val{config}/scripts/ls.kak"
  source "%val{config}/scripts/explore.kak"
  source "%val{config}/scripts/list_buffers.kak"

  source "%val{config}/scripts/verifpal.kak"
}

hook global ModeChange "push:normal:prompt" %{
  map -docstring 'Insert selection' \
    window prompt <a-i> "%reg{.}<a-!>"
}

hook global WinSetOption "filetype=kak" %{
  map -docstring "evaluate whole buffer" \
    window user e %{%: eval %reg{.}<ret>}
}

hook global ModuleLoaded "kitty" %{
  # Let WM handle terminals
  unalias global terminal kitty-terminal
  alias global terminal x11-terminal
}

# COMMANDS #

define-command split -params 0 -docstring \
"Creates new client with current buffer" \
%{
  new %sh{
    line=$(echo "$kak_window_range" | cut -d' ' -f 1)
    column=$(echo "$kak_window_range" | cut -d' ' -f 2)
    printf 'buffer -- %s;' "$kak_bufname"
    printf 'execute-keys %s jvt;' "$line"
    printf 'select -- %s;' "$kak_selection_desc"
    printf 'execute-keys V %s <esc>;' "$(printf "%""$column""s" | tr ' ' 'l')"
  }
}

define-command change-filetype \
  -params 1..1 \
  -docstring "change-filetype <filetype>: set filetype of current buffer" \
  %{ set buffer filetype %arg{1} }

define-command clear-trailing-whitespaces \
  -docstring "deletes all trailing whitespaces in current buffer" \
  %{ try %{ execute-keys -draft '%s[ \t]+$<ret>d' } }

# OPTIONS #

require-module x11
declare-option str term 'kitty'
set-option global termcmd "%opt{term} -e bash -c "
set-option global grepcmd 'rg -Hn'
alias global tag ctags-search

# MAPPINGS #

declare-user-mode file-explorer
map -docstring 'Open current file directory' \
    global file-explorer d ': ex<ret>'
map -docstring 'Open working directory' \
    global file-explorer w ': ex %sh{pwd}<ret>'
map -docstring 'Open git root directory' \
    global file-explorer p ': ex %sh{git rev-parse --show-toplevel}<ret>'
map -docstring 'File explorer' \
    global user d ': enter-user-mode file-explorer<ret>'

map global normal / "/(?i)"
map -docstring 'Calculate selection' \
    global user = '| calc -p<ret>'
map -docstring 'System copy' \
    global user y '<a-|> xsel --input --clipboard<ret>'
map -docstring 'System paste' \
    global user p '! xsel --output --clipboard<ret>'
map -docstring 'Split window' \
    global user s ': split<ret>'
